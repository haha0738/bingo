package com.dermot.bingo;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Set;

import com.dermot.bingo.exception.DuplicateInptException;

public class Game {
	private Set<Integer> _inputs = new HashSet<>();
	private List<Player> _players = new ArrayList<>();
	private List<Integer> _patterns = new ArrayList<>();
	
	Game()
	{
		/*
		 * 0	1	2	3	4
		 * 5	6	7	8	9	
		 * 10	11	12	13	14
		 * 15	16	17	18	19
		 * 20	21	22	23	24
		 */
		for (int i = 0; i < 5; i++) 
		{
			int pattern = 	1 << (0 + i * 5) |
							1 << (1 + i * 5) |
							1 << (2 + i * 5) |
							1 << (3 + i * 5) |
							1 << (4 + i * 5);
			_patterns.add(pattern);
		}
		
		for (int i = 0; i < 5; i++) 
		{
			int pattern = 	1 << (0 * 5 + i) |
							1 << (1 * 5 + i) |
							1 << (2 * 5 + i) |
							1 << (3 * 5 + i) |
							1 << (4 * 5 + i);
			_patterns.add(pattern);
		}
		
		_patterns.add(	1 << 0 |
						1 << 6 |
						1 << 12 |
						1 << 18 |
						1 << 24);
		
		_patterns.add(	1 << 4|
						1 << 8 |
						1 << 12 |
						1 << 16 |
						1 << 20);
		
		for (Integer integer : _patterns) 
		{
			System.out.println(Integer.toBinaryString(integer));
		}
	}
	
	public void start()
	{
		_players.clear();
		BufferedReader buf = new BufferedReader(new InputStreamReader(System.in)); 
		int value;
		System.out.println("請輸入玩家數量");
		while(true)
		{
			try 
			{
				value = Integer.valueOf(buf.readLine());
				if (value < 2) 
					throw new InputMismatchException();
				break;
			} 
			catch (InputMismatchException | NumberFormatException | IOException e) 
			{
				System.out.println("玩家數量必須為正整數並且大於兩人，請重新輸入");
			}
		}
		
		
		for (int i = 0; i < value; i++) 
		{
			String name = "";
			System.out.println("請輸入玩家 " + i + " 的暱稱");
			while(true)
			{
				try 
				{
					name = buf.readLine();
					if (name.length() <= 0) 
						throw new InputMismatchException();
					break;
				} 
				catch (InputMismatchException | IOException e) 
				{
					System.out.println("請正確輸入玩家 " + i + " 的暱稱");
				}
			}
			
			Player player = new Player(this, name);
			_players.add(player);
		}
		
		for(int i = 0;; i++)
		{
			int index = i % _players.size();
			Player player = _players.get(index);
			System.out.println("玩家 " + player.getName() + "輸入");
			while(true)
			{
				try 
				{
					value = Integer.valueOf(buf.readLine());
					if (value <= 0 || value > 25) 
						throw new InputMismatchException();
					if (_inputs.contains(value)) 
						throw new DuplicateInptException();
					
					System.out.println("玩家" + player.getName() + "輸入" + value + "");
					_inputs.add(value);
					break;
				} 
				catch (InputMismatchException | NumberFormatException | IOException e) 
				{
					System.out.println("玩家" + player.getName() + "輸入錯誤，請重新輸入");
				}
				catch (DuplicateInptException e) 
				{
					System.out.println("玩家" + player.getName() + "輸入" + value + " 已有其他玩家輸入，請重新輸入");
				}
			}
			
			if (hasWinner()) 
			{
				break;
			}
		}
		
		
	}
	
	public List<Integer> getPatterns() 
	{
		return _patterns;
	}
	
	public Set<Integer> getInputs() {
		return _inputs;
	}
	
	public boolean hasWinner()
	{
		for (Player player : _players) {
			if (player.isWin()) {
				return true;
			}
		}
		return false;
	}
}
